# -*- coding: utf-8 -*-
"""imgAug_complete.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KWRB5_g7EJo4EYoadgDJ8DqwnuI3q6NR
"""

def convert(i1):

  x = i1[0]
  y = i1[1]
  w = i1[2] - x
  h = i1[3] - y
  center_x = x + w / 2
  center_y = y + h / 2

  n0 = center_x / width
  n1 = center_y / height
  n2 = w / width 
  n3 = h / height 

  return f'{i1[4]} ' +  str(n0) + ' ' + str(n1) + ' ' + str(n2) + ' ' + str(n3) + '\n'

from google.colab import drive
drive.mount('/content/drive')

!unzip /content/drive/MyDrive/coco_yolov5.zip -d /content

# Commented out IPython magic to ensure Python compatibility.
import time
st = time.time()
import cv2
import os 
import imageio
import imgaug as ia
from imgaug.augmentables.bbs import BoundingBox, BoundingBoxesOnImage
from imgaug import augmenters as iaa 
from PIL import Image as im
import PIL 

# %matplotlib inline
ia.seed(1)

l = sorted(os.listdir('/content/data/labels/train'))

for labels in l: 
  
  image = cv2.imread('/content/data/images/train/{}jpg'.format(labels.rstrip('txt')))
  try:
    width = image.shape[1]
  except:
    print('not')
    continue

  height = image.shape[0]
  bs  = []
  with open('/content/data/labels/train/'+labels, 'r') as cor:
    cord1 = cor.readlines()

    for cord in cord1:
      cord = cord.split(' ')

      center_x = int(float(cord[1]) * width)
      center_y = int(float(cord[2]) * height)
      w = int(float(cord[3]) * width)
      h = int(float(cord[4]) * height)
      label = int(cord[0])

      x = int(center_x - w / 2)
      y = int(center_y - h / 2)

      x1 = x 
      y1 = y
      x2 = x + w
      y2 = y + h
      bs.append((x1, x2, y1 , y2))   

  bb = []

  for b, c in zip(bs, range(len(bs))):
    bb.append(eval(f'BoundingBox(x1={bs[c][0]}, x2={bs[c][1]}, y1={bs[c][2]}, y2={bs[c][3]}, label = {label})'))  

  bbs = BoundingBoxesOnImage(bb, shape=image.shape) 
  
  seq = iaa.SomeOf(2, [
    iaa.GammaContrast(1.5),
    iaa.Affine(translate_percent={"x": 0.1}, scale=0.8),
    iaa.Affine(rotate=(-15, 15)),
    iaa.Affine(shear=(-15, 15)),
    iaa.AdditiveGaussianNoise(scale=0.1*255),
    iaa.Add(50, per_channel=True),
    iaa.Sharpen(alpha=0.5),
    iaa.Fliplr(1), 
    iaa.MotionBlur(k=8),
    iaa.MedianBlur(k=(3, 9))
  ])

  for count in range(10):
    image_aug, bbs_aug = seq(image=image, bounding_boxes=bbs)
    str_d = repr(bbs_aug).split('[')[1].split(']')[0].split('BoundingBox')[1:]
    import ast
    for i in str_d:
      i = i.rstrip(', ').split('(')[1].split(')')[:-1][0].split(' ,')[0].split(', ')
      i1 = []
      for val in i:
        val = val.split('=')
        i1.append(ast.literal_eval(val[1]))     
      with open('/content/data/labels/train/{}_{}.txt'.format(labels.rstrip('txt'), count), 'a') as f:
        f.write(convert(i1))
    cv2.imwrite('/content/data/images/train/{}_{}.jpg'.format(labels.rstrip('txt'), count), image_aug) 
    print('done')
    break
print(time.time()-st)

!zip -r /content/drive/MyDrive/coco_yolov5_aug.zip data

img = cv2.imread('data/images/train/000000107836._9.jpg')

ia.imshow(image = img)

with open('data/labels/train/000000107836._9.txt',  'r') as f:
    print(f.readlines()[0].rstrip('\n'))

ia.imshow(bbs_aug.draw_on_image(image_aug))
# -*- coding: utf-8 -*-
"""Recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17beGMEbxsvsrAtdsz5aDm6GqDP0F8OSP
"""

'hi'

import pandas as pd
dataframe = pd.read_csv('/content/IndianFoodDatasetCSV.csv')
dataframe

final_data

final_data = dataframe[:100]

clean_data = final_data.drop(labels=['PrepTimeInMins','CookTimeInMins','TotalTimeInMins','Servings','TranslatedRecipeName'], axis = 1)

clean_data.to_csv('/content/clean_data.csv')

clean_data

df = clean_data

df.columns

features = ['Course', 'Cuisine', 'Diet']

def combine_features(row):
  return row['Course'] + " " + row['Cuisine']+ " " + row['Diet']

df['combined_features'] = df.apply(combine_features, axis=1)

df['combined_features']

import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

cv = CountVectorizer()
count_matrix = cv.fit_transform(df['combined_features'])

count_matrix

cosine_sim = cosine_similarity(count_matrix)
dish_user = 'Masala Karela Recipe'

cosine_sim

def get_name_from_index(index):
  return df[df.index == index]['RecipeName'].values[0]

def get_index_from_name(title):
  return df[df.RecipeName == title]['Srno'].values[0]

recipe_index = get_index_from_name(dish_user)
similar_recipe = list(enumerate(cosine_sim[recipe_index]))
sorted_similar_recipe = sorted(similar_recipe, key = lambda x:x[1], reverse=True)

"""## ** Plese see this @ak ** 

"""



recipe_index

sorted_similar_recipe

i = 0

for recipe in sorted_similar_recipe:
  final = get_name_from_index(recipe[0])
  print(final)
  i = i+1
  if i > 20:
    break

df.loc[91]

df.loc[1]

